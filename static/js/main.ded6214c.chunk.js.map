{"version":3,"sources":["serviceWorker.js","components/navBar.jsx","redux/reducer.js","components/PokedexItem.jsx","redux/actions.js","components/PokedexItemInfo.jsx","components/PokedexList.jsx","App.js","redux/store.js","index.js"],"names":["Boolean","window","location","hostname","match","NavBar","className","initialState","pokemon","url","limit","nextPage","isOpen","pokemonData","pokedex","state","action","type","payload","results","next","connect","dispatch","openInfo","arg","props","name","useState","setPokemonData","nameCapitalized","charAt","toUpperCase","slice","useEffect","axios","get","then","res","data","catch","err","src","sprites","front_default","alt","onClick","types","map","el","key","num","id","toString","length","Math","random","stats","base_stat","weight","moves","getPokemons","a","getNextPokemons","PokedexItemInfo","App","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.ded6214c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\n\nfunction NavBar() {\n\n  return (\n    <nav className=\"navbar navbar-light bg-light justify-content-center\">\n        <h1>Pokedex</h1>\n    </nav>\n  );\n}\n\nexport default NavBar;\n","export const GET_POKEMONS = 'GET_POKEMONS';\r\nexport const GET_NEXT_POKEMONS = 'GET_NEXT_POKEMONS';\r\nexport const OPEN_INFO = 'OPEN_INFO';\r\nexport const initialState = {\r\n  pokemon: [],\r\n  url: 'http://pokeapi.co/api/v2/pokemon/',\r\n  limit: '?limit=9',\r\n  nextPage: '',\r\n  isOpen: false,\r\n  pokemonData: {}\r\n};\r\n\r\nconst pokedex = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_POKEMONS:\r\n      return ({\r\n        ...state,\r\n        pokemon: [...action.payload.results],\r\n        nextPage: action.payload.next,\r\n      });\r\n\r\n    case GET_NEXT_POKEMONS:\r\n      return ({\r\n        ...state,\r\n        pokemon: [...state.pokemon, ...action.payload.results],\r\n        nextPage: action.payload.next,\r\n      });\r\n\r\n    case OPEN_INFO:\r\n      return ({\r\n        ...state,\r\n        pokemonData: {...action.payload},\r\n        isOpen: true,\r\n      })\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default pokedex;\r\n","import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport {openInfo} from \"../redux/actions\";\n\n\nfunction PokedexItem(props) {\n  const {name, url} = props.pokemon;\n  const [pokemonData, setPokemonData] = useState('');\n  const nameCapitalized = name.charAt(0).toUpperCase() + name.slice(1);\n\n  useEffect(() => {\n    axios.get(url)\n      .then((res) => setPokemonData(res.data))\n      .catch(err => err);\n  }, [url]);\n\n\n  if (!pokemonData) return null\n\n  return (\n    <div className=\"col mb-3\">\n      <div className=\"card shadow bg-white rounded size\">\n        <img src={pokemonData.sprites.front_default}\n               className=\"card-img-top p-3\" alt=\"img\" onClick={() => props.openInfo(pokemonData)}/>\n\n        <div className=\"card-body\">\n          <p className=\"card-text text-center\"><strong>{nameCapitalized}</strong></p>\n        </div>\n\n        <footer className=\"card-footer\">\n          {pokemonData.types.map((el) => <span className={`badge ${el.type.name} ml-1`}\n                                               key={el.type.name}>{el.type.name}</span>)}\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  pokemonData: state.pokemonData\n})\n\nconst mapDispatchToProps = dispatch => ({\n  openInfo: (arg) => dispatch(openInfo(arg)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PokedexItem);\n","import axios from 'axios'\r\nimport {initialState} from './reducer';\r\nimport {\r\n  GET_NEXT_POKEMONS,\r\n  GET_POKEMONS,\r\n  OPEN_INFO,\r\n} from \"./reducer\";\r\n\r\n\r\nexport function getPokemons() {\r\n  return async (dispatch) => {\r\n    await axios\r\n      .get(initialState.url + initialState.limit)\r\n      .then(({data}) => {\r\n        dispatch({\r\n          type: GET_POKEMONS,\r\n          payload: data,\r\n        })\r\n      })\r\n      .catch(err => err);\r\n  }\r\n}\r\n\r\nexport function getNextPokemons(url) {\r\n  return async (dispatch) => {\r\n    await axios\r\n      .get(url)\r\n      .then(({data}) => {\r\n        dispatch({\r\n          type: GET_NEXT_POKEMONS,\r\n          payload: data,\r\n        })\r\n      })\r\n      .catch(err => err);\r\n  }\r\n}\r\n\r\nexport function openInfo(args) {\r\n  return {type: OPEN_INFO, payload: args}\r\n}\r\n\r\n\r\n","import React from \"react\";\nimport {connect} from \"react-redux\";\n\n\nfunction PokedexItem(props) {\n  const {pokemonData} = props;\n  const nameCapitalized = pokemonData.name.charAt(0).toUpperCase() + pokemonData.name.slice(1);\n\n  const addZeroToId = (num) => {\n    if (num.toString().length < 2) return \"00\" + num;\n    else if (num.toString().length < 3) return \"0\" + num;\n    return num.toString();\n  }\n\n  if (!pokemonData) return null\n\n  return (\n    <div className=\"col-12\">\n      <div className=\"card shadow bg-white rounded correct sticky-top \">\n        <img src={pokemonData.sprites.front_default}\n             className=\"card-img-top p-3\" alt=\"img\"/>\n\n        <div className=\"card-body m-1\">\n          <p className=\"card-text text-center\"><strong>{nameCapitalized + '  #'+  addZeroToId(pokemonData.id)}</strong></p>\n        </div>\n\n        <ul className=\"list-group list-group-flush small border m-1\">\n          <li className=\"list-group-item d-flex justify-content-between p-1 pl-2 pr-2\">\n            <span>Type</span>\n\n            <div>\n              {pokemonData.types.map(el => <span key={Math.random()}>{el.type.name + ' '}</span>)}\n            </div>\n          </li>\n\n          <li className=\"list-group-item d-flex justify-content-between p-1 pl-2 pr-2\">\n            <span className='text-sm-center'>Attack</span>\n            <span>{pokemonData.stats[4].base_stat}</span>\n          </li>\n\n          <li className=\"list-group-item d-flex justify-content-between p-1 pl-2 pr-2\">\n            <span>Defence</span>\n            <span>{pokemonData.stats[3].base_stat}</span>\n          </li>\n\n          <li className=\"list-group-item d-flex justify-content-between p-1 pl-2 pr-2\">\n            <span>HP</span>\n            <span>{pokemonData.stats[5].base_stat}</span>\n          </li>\n\n          <li className=\"list-group-item d-flex justify-content-between p-1 pl-2 pr-2\">\n            <span>SP Attack</span>\n            <span>{pokemonData.stats[2].base_stat}</span>\n          </li>\n\n          <li className=\"list-group-item d-flex justify-content-between p-1 pl-2 pr-2\">\n            <span>SP Defence</span>\n            <span>{pokemonData.stats[1].base_stat}</span>\n          </li>\n\n          <li className=\"list-group-item d-flex justify-content-between p-1 pl-2 pr-2\">\n            <span>Speed</span>\n            <span>{pokemonData.stats[0].base_stat}</span>\n          </li>\n\n          <li className=\"list-group-item d-flex justify-content-between p-1 pl-2 pr-2\">\n            <span>Weight</span>\n            <span>{pokemonData.weight}</span>\n          </li>\n\n          <li className=\"list-group-item d-flex justify-content-between p-1 pl-2 pr-2\">\n            <span>Total moves</span>\n            <span>{pokemonData.moves.length}</span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  pokemonData: state.pokemonData,\n})\n\nexport default connect(mapStateToProps, null)(PokedexItem);\n","import React, {useEffect} from \"react\";\nimport {connect} from 'react-redux';\nimport PokedexItem from \"./PokedexItem\";\nimport {getPokemons, getNextPokemons } from '../redux/actions';\nimport PokedexItemInfo from \"./PokedexItemInfo\";\n\n\nconst PokedexList = (props) => {\n  const { nextPage, pokemon, isOpen } = props.state;\n\n  useEffect(() => {\n    props.getPokemons()\n  }, [])\n\n\n  if (!pokemon) return null;\n\n  return (\n    <div>\n      <div className=\"card-deck mt-4\">\n        <div className={`${isOpen && 'col-xl-9 col-lg-9 col-md-7 col-sm-12'}`}>\n          <div className=\"row row-cols-xl-3 row-cols-lg-3 row-cols-md-2 row-cols-sm-1 row-cols-1\">\n            {pokemon.map(el => <PokedexItem key={el.name} pokemon={el} url={el.url} />)}\n\n\n          </div>\n          <button type=\"button\" className=\"btn btn-outline-primary col-12 mb-5 mt-3 text-center\"\n                  onClick={() => props.getNextPokemons(nextPage)}>Load more\n          </button>\n        </div>\n\n        <div className=\"row col-xl-3 col-lg-3 col-md-5 col-sm-12 correct\">\n          {isOpen && <PokedexItemInfo/>}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  state: state,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  getPokemons: () => dispatch(getPokemons()),\n  getNextPokemons: (url) => dispatch(getNextPokemons(url)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PokedexList);\n","import React from 'react';\nimport NavBar from \"./components/navBar\";\nimport PokemonList from \"./components/PokedexList\";\n\nfunction App() {\n  return (\n    <div className=\"container App\">\n      <NavBar/>\n      <PokemonList/>\n    </div>\n  );\n}\n\nexport default App;\n","import {applyMiddleware, createStore} from 'redux';\r\nimport thunk from \"redux-thunk\";\r\nimport reducer from './reducer';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport App from './App';\nimport store from \"./redux/store\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App/>\n    </React.StrictMode>\n  </Provider>,\ndocument.getElementById('root')\n)\n;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}